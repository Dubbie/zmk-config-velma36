#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        timeless_mt_left: timeless_mt_left {
            compatible = "zmk,behavior-hold-tap";
            label = "TIMELESS_MT_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <35 34 33 32 31 30 29 28 27 26 25 15 5 6 16 7 17 8 18 9 19>;
            hold-trigger-on-release;
        };

        timeless_mt_right: timeless_mt_right {
            compatible = "zmk,behavior-hold-tap";
            label = "TIMELESS_MT_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <35 34 33 32 31 30 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <2 1>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <21 22>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 7>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <28 27>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                         &kp W                         &kp F                      &kp P                       &kp B            &kp J      &kp L                            &kp U                       &kp Y                           &kp SQT
&timeless_mt_left LEFT_GUI A  &timeless_mt_left LEFT_ALT R  &timeless_mt_left LCTRL S  &timeless_mt_left LSHIFT T  &kp G            &kp M      &timeless_mt_right LEFT_SHIFT N  &timeless_mt_right LCTRL E  &timeless_mt_right I RIGHT_ALT  &timeless_mt_right LEFT_GUI O
&kp Z                         &kp X                         &kp C                      &kp D                       &kp V            &kp K      &kp H                            &kp COMMA                   &kp DOT                         &kp FSLH
&lt 1 ESCAPE                  &lt 2 SPACE                   &kp TAB                    &lt 3 ENTER                 &lt 4 BACKSPACE  &lt 5 DEL
            >;
        };

        Media {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans             &trans        &trans        &trans        &trans
&trans       &trans  &trans  &trans  &trans  &ext_power EP_TOG  &trans        &trans        &trans        &trans
&trans       &trans  &trans  &trans  &trans  &out OUT_TOG       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
&trans       &trans  &trans  &trans  &trans  &trans
            >;
        };

        Nav {
            bindings = <
&trans  &trans  &trans  &trans     &trans    &kp LC(Y)  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)
&trans  &trans  &trans  &trans     &trans    &kp CAPS   &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT
&trans  &trans  &trans  &trans     &trans    &trans     &kp HOME   &kp PG_DN  &kp PG_UP  &kp END
&trans  &trans  &trans  &kp ENTER  &kp BSPC  &kp DEL
            >;
        };

        Sym {
            bindings = <
&kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)  &trans  &trans  &trans  &trans  &trans
&kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)  &trans  &trans  &trans  &trans  &trans
&kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)  &none   &trans  &trans  &trans  &trans
&kp LS(LPAR)   &kp LS(RPAR)  &kp LS(UNDER)  &trans         &trans        &trans
            >;
        };

        Num {
            bindings = <
&kp LBKT   &kp N7  &kp N8     &kp N9  &kp RBKT   &trans  &trans  &trans  &trans  &trans
&kp SEMI   &kp N4  &kp N5     &kp N6  &kp EQUAL  &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp N1  &kp N2     &kp N3  &kp BSLH   &trans  &trans  &trans  &trans  &trans
&kp DOT    &kp N0  &kp MINUS  &trans  &trans     &trans
            >;
        };

        Fun {
            bindings = <
&kp F12     &kp F7     &kp F8   &kp F9  &kp PRINTSCREEN  &trans  &trans  &trans  &trans  &trans
&kp F11     &kp F4     &kp F5   &kp F6  &trans           &trans  &trans  &trans  &trans  &trans
&kp F12     &kp F1     &kp F2   &kp F3  &trans           &trans  &trans  &trans  &trans  &trans
&kp C_MENU  &kp SPACE  &kp TAB  &trans  &trans           &trans
            >;
        };
    };
};
